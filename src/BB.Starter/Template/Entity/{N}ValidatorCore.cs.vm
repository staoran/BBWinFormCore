using BB.Entity.${NameSpace};
using BB.Tools.Entity;
using BB.Tools.Validation;
using FluentValidation;

namespace BB.EntityVerificationCore.${NameSpace};

/// <summary>
#if(${Display})
/// ${Display} 验证类
#else
/// ${Name} 验证类
#end
/// </summary>
public class ${Name}ValidatorCore : AbstractValidator<${Name}>
{
    /// <summary>
    /// 无参构造函数
    /// </summary>
    public ${Name}ValidatorCore() : this(OperationType.View)
    {
    }

    /// <summary>
    /// 验证规则构造函数
    /// </summary>
    /// <param name="operationType">当前操作类型</param>
    public ${Name}ValidatorCore(OperationType operationType = OperationType.View)
    {
        #region 参数值唯一性验证

#foreach($FieldInfo in ${MetadataImports})
## ↓查重
#if($FieldInfo.IsCheckDuplicate)
#if(${EntityProperty.CSharpFieldDes})
        // ${FieldInfo.CSharpFieldDes}
#end
#set($when = "IsAdd")
#if(!$FieldInfo.IsKey)
#set($when = "${when}OrEdit")
#end
        RuleFor(x => x.${FieldInfo.CSharpFieldName}).IsUnique(${primaryKey}).${when}().IsGo();
#end
## ↑end 查重
#end

        #endregion
    }
}